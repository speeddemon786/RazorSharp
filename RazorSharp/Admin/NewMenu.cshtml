@{
    Page.Title = "Admin :: Create Menu Item";
    Page.Heading = "Create Menu Item";

    var message = string.Empty;
    var mName = Request["mName"];
    var mUrl = Request["mURL"];
    var mOrderId = Request["mOrderId"];
    var mTarget = Request["mTarget"];
    var mParentId = 0;

    //populate dropdowns
    var pNames = Functions.PageNames(Request["mPage"]);
    var pTargets = Functions.PageTarget(mTarget);
    var pParents = Functions.PageParent(mParentId);

    Validation.RequireField("mName");
    Validation.RequireField("mOrderId");
    Validation.Add("mOrderId",Validator.Integer() );

    if (IsPost)
    {
        if (Validation.IsValid())
        {
            //no errors = insert record
            mParentId = int.Parse(Request["mParentId"]);
            if (mUrl.IsEmpty())
            {
                mUrl = "~/" + Request["mPage"];
                if (mUrl.ToLower() == "~/Default")
                {
                    mUrl = "~/";
                }
            }
            try
            {
                using (var db = Database.Open(Functions.GetDbName()))
                {
                    var sqlInsert = "Insert Into Menu (mName, mURL, mOrderId, mTarget, mParentId) Values (@0, @1, @2, @3, @4)";
                    db.Execute(sqlInsert, mName, mUrl, mOrderId, mTarget, mParentId);
                    message = Helpers.AlertSuccess("Menu Successfully Saved!");
                }
            }
            catch (Exception ex)
            {
                message = Helpers.AlertDanger(ex.Message);
            }
        }
        else
        {
            message = Helpers.AlertDanger("Page Validation Failed, Please Complete All Required Fields!");
        }
    }
}
@section Scripts{
<script type="text/javascript">
$(window).on('load', function() {
    $('form').validate({
        rules: {
            mName: {
                required: true
            },
            mOrderId: {
                required: true,
                number: true
            }
        },
        highlight: function(element) {
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
        },
        unhighlight: function(element) {
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
        },
        errorElement: 'span',
        errorClass: 'help-block',
        errorPlacement: function(error, element) {
            if(element.parent('.input-group').length) {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        }
    });

});
</script>
}
@section Menu{
    @RenderPage("_Menu.cshtml")
}
@Html.Raw(message)
<form action="" method="post">
    <div class="col-lg-12">
        <h2 class="page-header"><a href="@Href("~/Admin/AllMenu")">All Menu Items</a> | Create Menu Item</h2>
        <p>Use the form below to add items to the menu.<br />Should you require help for any of the fields, please hover over the <i class="glyphicon glyphicon-info-sign" title="Hover for help."></i> icon.</p>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.Label("Name", "mName", new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBox("mName", @mName, new { @maxlength = "50", @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Name that will be visible in menu"></i></span>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Select Page", "mPage", new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownList("mPage", pNames, new { @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Select page you want to link to"></i></span>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Or Enter URL", "mURL", new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBox("mURL", mUrl, new { @maxlength = "250", @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Use this if you want to link to pages that are outside of your website ex.: http://www.google.com"></i></span>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Order", "mOrderId", new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBox("mOrderId", @mOrderId, new { @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Higher the number, higher the position of item in menu"></i></span>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Target", "mTarget", new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownList("mTarget", pTargets, new { @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Should the page open in new window/tab or in the same window"></i></span>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Parent", "mParentId", new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownList("mParentId", pParents, new { @class = "form-control" })
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" title="Select parent page"></i></span>
                </div>
            </div>

            <p class="form-actions">
                <input class="btn btn-primary" type="submit" value="Add Menu Item" />
            </p>
        </div>
    </div>
</form>